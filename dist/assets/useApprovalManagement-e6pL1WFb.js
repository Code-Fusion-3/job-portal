import{r as o}from"./vendor-react-CtYtWwv0.js";import{j as k}from"./index-n9net970.js";const U=(M={})=>{const{autoFetch:E=!1,initialPage:R=1,itemsPerPage:v=10}=M,[y,g]=o.useState([]),[j,b]=o.useState([]),[S,w]=o.useState([]),[$,f]=o.useState(!1),[C,l]=o.useState(null),[A,F]=o.useState(0),d=o.useRef(null),[n,m]=o.useState(R),[p,B]=o.useState({page:1,limit:v,total:0,totalPages:0}),P=o.useCallback((s,c,a)=>{console.error(`ðŸ’¥ ${c} error:`,s);let t=a||"An unexpected error occurred";if(s?.response?.status)switch(s.response.status){case 401:t="Authentication failed. Please log in again.";break;case 403:t="You do not have permission to perform this action.";break;case 404:t="Resource not found.";break;case 429:t="Too many requests. Please try again later.";break;case 500:t="Server error. Please try again later.";break;default:t=s?.response?.data?.message||t}else s?.code==="NETWORK_ERROR"&&(t="Network error. Please check your connection and try again.");return t},[]),h=o.useCallback(async(s,c=3)=>{for(let a=0;a<=c;a++)try{return await s()}catch(t){if(a===c)throw t;const r=Math.pow(2,a)*1e3;await new Promise(e=>setTimeout(e,r)),F(e=>e+1)}},[]),u=o.useCallback(async(s,c=1,a=!0)=>{d.current&&d.current.abort(),d.current=new AbortController,f(!0),l(null);const t=async()=>{const r=await k.getProfilesByStatus(s,{page:c,limit:v,signal:d.current?.signal});if(r.success){const e=r.data||[],i=r.pagination||{};switch(s){case"pending":g(e);break;case"approved":b(e);break;case"rejected":w(e);break;default:console.warn(`Unknown status: ${s}`);break}return B(i),m(c),F(0),{success:!0,data:e,pagination:i}}else throw new Error(r.error||"Failed to fetch profiles")};try{return a?await h(t):await t()}catch(r){if(r.name==="AbortError")return console.log("Fetch operation was cancelled"),{success:!1,error:"Operation cancelled"};const e=P(r,"fetchProfilesByStatus",`Failed to fetch ${s} profiles`);return l(e),{success:!1,error:e}}finally{f(!1),d.current=null}},[v,P,h]),O=o.useCallback(async s=>{if(!s){const r="Profile ID is required for approval";return l(r),{success:!1,error:r}}f(!0),l(null);const c=[...y],a=[...j],t=async()=>{const r=await k.approveJobSeeker(s);if(r.success)return r;throw new Error(r.error||"Failed to approve profile")};try{g(e=>e.filter(i=>i.id!==s));const r=await h(t);r.data&&b(e=>[...e,r.data]);try{await u("pending",n,!1)}catch(e){console.warn("Failed to refresh data after approval:",e)}return{success:!0,data:r.data,message:r.message||"Profile approved successfully"}}catch(r){g(c),b(a);const e=P(r,"approveProfile","Failed to approve profile");return l(e),{success:!1,error:e}}finally{f(!1)}},[y,j,u,n,h,P]),x=o.useCallback(async(s,c)=>{if(!s){const e="Profile ID is required for rejection";return l(e),{success:!1,error:e}}if(!c||c.trim().length<10){const e="A detailed rejection reason (minimum 10 characters) is required";return l(e),{success:!1,error:e}}f(!0),l(null);const a=[...y],t=[...S],r=async()=>{const e=await k.rejectJobSeeker(s,c.trim());if(e.success)return e;throw new Error(e.error||"Failed to reject profile")};try{g(i=>i.filter(W=>W.id!==s));const e=await h(r);e.data&&w(i=>[...i,e.data]);try{await u("pending",n,!1)}catch(i){console.warn("Failed to refresh data after rejection:",i)}return{success:!0,data:e.data,message:e.message||"Profile rejected successfully"}}catch(e){g(a),w(t);const i=P(e,"rejectProfile","Failed to reject profile");return l(i),{success:!1,error:i}}finally{f(!1)}},[y,S,u,n,h,P]),q=o.useCallback(async s=>{f(!0),l(null);try{const c=await Promise.all(s.map(r=>k.approveJobSeeker(r))),a=c.filter(r=>r.success),t=c.filter(r=>!r.success);if(t.length===0)return g(r=>r.filter(e=>!s.includes(e.id))),b(r=>[...r,...a.map(e=>e.data)]),await u("pending",n),{success:!0,message:`Successfully approved ${a.length} profiles`,count:a.length};{const r=`Failed to approve ${t.length} profiles`;return l(r),{success:!1,error:r,failed:t}}}catch(c){const a="An error occurred during bulk approval";return console.error("ðŸ’¥ Bulk approve error:",c),l(a),{success:!1,error:a}}finally{f(!1)}},[u,n]),J=o.useCallback(async(s,c)=>{f(!0),l(null);try{const a=await Promise.all(s.map(e=>k.rejectJobSeeker(e,c))),t=a.filter(e=>e.success),r=a.filter(e=>!e.success);if(r.length===0)return g(e=>e.filter(i=>!s.includes(i.id))),w(e=>[...e,...t.map(i=>i.data)]),await u("pending",n),{success:!0,message:`Successfully rejected ${t.length} profiles`,count:t.length};{const e=`Failed to reject ${r.length} profiles`;return l(e),{success:!1,error:e,failed:r}}}catch(a){const t="An error occurred during bulk rejection";return console.error("ðŸ’¥ Bulk reject error:",a),l(t),{success:!1,error:t}}finally{f(!1)}},[u,n]),T=o.useCallback(s=>{m(Math.max(1,Math.min(s,p.totalPages)))},[p.totalPages]),D=o.useCallback(()=>{n<p.totalPages&&m(n+1)},[n,p.totalPages]),N=o.useCallback(()=>{n>1&&m(n-1)},[n]);return o.useEffect(()=>{E&&u("pending",1)},[E,u]),o.useEffect(()=>{l(null)},[n]),o.useEffect(()=>()=>{d.current&&d.current.abort()},[]),{pendingProfiles:y,approvedProfiles:j,rejectedProfiles:S,loading:$,error:C,retryCount:A,currentPage:n,pagination:p,fetchProfilesByStatus:u,approveProfile:O,rejectProfile:x,bulkApprove:q,bulkReject:J,goToPage:T,nextPage:D,prevPage:N,setCurrentPage:m,hasNextPage:n<p.totalPages,hasPrevPage:n>1,totalItems:p.total,totalPages:p.totalPages,clearError:()=>l(null),hasError:!!C,isRetrying:A>0}};export{U as u};
